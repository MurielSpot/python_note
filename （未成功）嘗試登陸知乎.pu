# -*- coding: utf-8 -*-
"""
Created on Fri Feb 23 13:59:03 2018

@author: oakpa
"""

import requests

from bs4 import BeautifulSoup

url='https://www.zhihu.com/signup?next=%2F'

'''定制请求头

只要简单地传递一个 dict 给 headers 参数就可以了。

注意: 定制 header 的优先级低于某些特定的信息源，例如：

如果在 .netrc 中设置了用户认证信息，使用 headers= 设置的授权就不会生效。而如果设置了 auth= 参数，``.netrc`` 的设置就无效了。
如果被重定向到别的主机，授权 header 就会被删除。
代理授权 header 会被 URL 中提供的代理身份覆盖掉。
在我们能判断内容长度的情况下，header 的 Content-Length 会被改写。
更进一步讲，Requests 不会基于定制 header 的具体情况改变自己的行为。只不过在最后的请求中，所有的 header 信息都会被传递进去。

注意: 所有的 header 值必须是 string、bytestring 或者 unicode。尽管传递 unicode header 也是允许的，但不建议这样做。
'''

header={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36',
        '_xsrf':'87273e11-6887-4e11-b4cd-1249698e79c6',
        'Referer':'https://www.zhihu.com/signup?next=%2F',
        'username': '用戶名',
        'password': '密碼'
        }

#r = requests.get(url, headers=header,allow_redirects=False)#最後一個參數是不允許重定向。
r = requests.get(url, headers=header)
print(r.text)
#以上代碼并不能登陸成功知乎，返回來的是登陸頁面。不過比之前好在不再出現500錯誤了，返回的是200.

'''
更加复杂的 POST 请求
通常，你想要发送一些编码为表单形式的数据——非常像一个 HTML 表单。
要实现这个，只需简单地传递一个字典给 data 参数。
你的数据字典在发出请求时会自动编码为表单形式。


payload={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36',
        '_xsrf':'87273e11-6887-4e11-b4cd-1249698e79c6',
        'Referer':'https://www.zhihu.com/signup?next=%2F',
        'username': '17775224962',
        'password': '1234567a'
        }
r2 = requests.post(url, data=payload)
print(r2)

#
'''
soup=BeautifulSoup(r.text,'html.parser')
print(soup.a.text)

#_xsrf = BeautifulSoup(session.get('https://www.zhihu.com/#signin').content).find('input', attrs={'name': '_xsrf'})['value'] 
